openapi: 3.1.0
info:
  title: Basic
  version: 0.0.1
servers:
  - url: http://localhost:3000
    description: Local
paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/{id}:
    get:
      summary: Get a user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
          description: The id of the user to retrieve
      responses:
        "200":
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
          description: The id of the user to delete
      responses:
        "200":
          description: Successfully deleted user
components:
  schemas:
    UserId:
      type: string
      description: A id unique to each user
      example: 1234
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        userName:
          type: string
          minLength: 1
          maxLength: 20
          pattern: ^[a-z0-9]+$
          description: The user's username, which must be alphanumeric
          example: username1
        displayName:
          type: string
          minLength: 1
          maxLength: 50
          description: The user's display name, with no limitations on characters allowed
          example: 1 Full Display Name
      required:
        - id
        - userName
        - displayName
      description: A user
    UserUpdateRequest:
      type: object
      properties:
        $ref: "#/components/schemas/User/properties"
      required:
        - id
      description: A update request that can update username, display name, or both
  parameters: {}
